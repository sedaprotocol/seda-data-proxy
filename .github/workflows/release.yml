name: 🚀 Release
on:
  push:
    tags: ["*"]

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/sedaprotocol/seda-data-proxy

jobs:
  build:
    name: 🛠️ Build JS Artifact and Changelog
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: 📦 Install Dependencies
        run: bun install

      - name: 🔨 Build seda-data-proxy
        run: |
          mkdir -p build
          bun run build

      - name: 📝 Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: false
          skip-commit: true
          skip-tag: true
          skip-git-pull: true
          git-push: false

      - name: 🔢 Generate Checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            seda-data-proxy-darwin-arm64
            seda-data-proxy-darwin-x64
            seda-data-proxy-linux-arm64
            seda-data-proxy-linux-arm64-musl
            seda-data-proxy-linux-x64
            seda-data-proxy-linux-x64-musl
            seda-data-proxy-windows-x64.exe

      - name: ⬆️ Upload artifacts and checksum for release
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            seda-data-proxy-darwin-arm64
            seda-data-proxy-darwin-x64
            seda-data-proxy-linux-arm64
            seda-data-proxy-linux-arm64-musl
            seda-data-proxy-linux-x64
            seda-data-proxy-linux-x64-musl
            seda-data-proxy-windows-x64.exe
            checksum.txt

  build_and_push_docker_images:
    name: 🐳 Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            target_arch: bun-linux-x64
          - platform: linux/arm64
            target_arch: bun-linux-arm64
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            latest

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .build/docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGET_ARCH=${{ matrix.target_arch }}

  create_release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, build_and_push_docker_images]
    steps:
      - name: 📥 Download all release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: ./release-assets

      - name: 🎉 Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: true
          body: ${{ needs.build.outputs.changelog }}
          artifacts: ./release-assets/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          tag: ${{ github.ref_name }} 
