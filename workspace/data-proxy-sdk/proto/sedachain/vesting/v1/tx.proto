syntax = "proto3";
package sedachain.vesting.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/vesting/types";

// Msg defines the vesting Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateVestingAccount creates a new vesting account.
  rpc CreateVestingAccount(MsgCreateVestingAccount)
      returns (MsgCreateVestingAccountResponse);

  // Clawback returns the vesting funds back to the funder.
  rpc Clawback(MsgClawback) returns (MsgClawbackResponse);
}

// MsgCreateVestingAccount defines a message that creates a vesting account.
message MsgCreateVestingAccount {
  option (cosmos.msg.v1.signer) = "from_address";
  option (amino.name) = "cosmos-sdk/MsgCreateVestingAccount";

  option (gogoproto.equal) = true;

  string from_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string to_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // end of vesting as unix time (in seconds).
  int64 end_time = 4;

  // if true, leave funder field empty and disable clawback
  bool disable_clawback = 5;
}

// MsgCreateVestingAccountResponse defines the CreateVestingAccount response
// type.
message MsgCreateVestingAccountResponse {}

// MsgClawback defines a message that returns the vesting funds to the funder.
message MsgClawback {
  option (cosmos.msg.v1.signer) = "funder_address";

  // funder_address is the address which funded the account.
  string funder_address = 1;
  // account_address is the address of the vesting to claw back from.
  string account_address = 2;
}

// MsgClawbackResponse defines the MsgClawback response type.
message MsgClawbackResponse {
  repeated cosmos.base.v1beta1.Coin clawed_unbonded = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];

  repeated cosmos.base.v1beta1.Coin clawed_unbonding = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];

  repeated cosmos.base.v1beta1.Coin clawed_bonded = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}
